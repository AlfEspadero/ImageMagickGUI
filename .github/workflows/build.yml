name: Build Executables

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact_name: ImageMagick-GUI-Windows
            asset_name: ImageMagick-GUI-Windows.zip
          - os: ubuntu-latest
            artifact_name: ImageMagick-GUI-Linux
            asset_name: ImageMagick-GUI-Linux.tar.gz
          - os: macos-latest
            artifact_name: ImageMagick-GUI-macOS
            asset_name: ImageMagick-GUI-macOS.zip

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -e .
    
    - name: Build executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --windowed --name "ImageMagick-GUI" --distpath ./dist main.py
    
    - name: Build executable (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --onefile --name "ImageMagick-GUI" --distpath ./dist main.py
    
    - name: Build executable (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onedir --windowed --name "ImageMagick-GUI" --distpath ./dist main.py
    
    - name: Create release package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir release
        copy dist\ImageMagick-GUI.exe release\
        copy README.md release\
        copy requirements.txt release\
        echo "# ImageMagick GUI for Windows" > release\README-Windows.md
        echo "" >> release\README-Windows.md
        echo "## Quick Start" >> release\README-Windows.md
        echo "1. Install ImageMagick: https://imagemagick.org/script/download.php#windows" >> release\README-Windows.md
        echo "2. Double-click ImageMagick-GUI.exe to run" >> release\README-Windows.md
        7z a ${{ matrix.asset_name }} ./release/*
    
    - name: Create release package (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir release
        cp dist/ImageMagick-GUI release/
        cp README.md release/
        cp requirements.txt release/
        echo "# ImageMagick GUI for Linux" > release/README-Linux.md
        echo "" >> release/README-Linux.md
        echo "## Quick Start" >> release/README-Linux.md
        echo "1. Install ImageMagick: sudo apt-get install imagemagick" >> release/README-Linux.md
        echo "2. Run: ./ImageMagick-GUI" >> release/README-Linux.md
        chmod +x release/ImageMagick-GUI
        tar -czf ${{ matrix.asset_name }} -C release .
    
    - name: Create release package (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        mkdir release
        cp -R dist/ImageMagick-GUI.app release/
        cp README.md release/
        cp requirements.txt release/
        echo "# ImageMagick GUI for macOS" > release/README-macOS.md
        echo "" >> release/README-macOS.md
        echo "## Quick Start" >> release/README-macOS.md
        echo "1. Install ImageMagick: brew install imagemagick" >> release/README-macOS.md
        echo "2. Double-click ImageMagick-GUI.app to run" >> release/README-macOS.md
        zip -r ${{ matrix.asset_name }} release/
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.asset_name }}
    
    - name: Upload to release (if tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ matrix.asset_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}